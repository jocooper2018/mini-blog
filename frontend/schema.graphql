# This file was generated. Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

"Indicates exactly one field must be supplied and this field must not be `null`."
directive @oneOf on INPUT_OBJECT

type Comment {
  authorId: Int!
  content: String!
  createdAt: DateTime!
  id: Int!
  postId: Int!
  title: String!
  updatedAt: DateTime!
}

type Mutation {
  createComment(createCommentDto: CreateCommentDto!): Comment!
  createPost(createPostDto: CreatePostDto!): Post!
  createUser(createUserDto: CreateUserDto!): User!
  deletePost(id: Int!): Post!
  deleteUser(id: Int!): User!
  logIn(logInDto: LogInDto!): User!
  logOut: Boolean!
  updatePost(updatePostDto: UpdatePostDto!): Post!
  updateUser(updateUserDto: UpdateUserDto!): User!
}

type Post {
  authorId: Int!
  content: String!
  createdAt: DateTime!
  id: Int!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

type Query {
  checkIfUserWithEmailExist(email: String!): Boolean!
  getAllUsers: [User!]!
  getLoggedUser: User!
  getManyPost(authorId: Int): [Post!]!
  getOnePostById(id: Int!): Post!
  getOneUserById(id: Int!): User!
}

type User {
  createdAt: DateTime!
  email: String!
  id: Int!
  username: String!
}

"A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format."
scalar DateTime

input CreateCommentDto {
  authorId: Int!
  content: String!
  postId: Int!
  title: String!
}

input CreatePostDto {
  authorId: Int!
  content: String!
  title: String!
}

input CreateUserDto {
  email: String!
  password: String!
  username: String!
}

input LogInDto {
  email: String!
  password: String!
}

input UpdatePostDto {
  content: String
  id: Int!
  published: Boolean
  title: String
}

input UpdateUserDto {
  email: String
  id: Int!
  password: String
  username: String
}
